
 #####    ####   #    #  #####    ####  
 #    #  #    #  ##  ##  #    #  #      
 #####   #    #  # ## #  #####    ####  
 #    #  #    #  #    #  #    #       # 
 #    #  #    #  #    #  #    #  #    # 
 #####    ####   #    #  #####    ####  

sp_air_bouncing_bomb = {
	specialization = specialization_air 	
	icon = GFX_sp_air_bouncing_bomb

	project_tags = {
		sp_tag_aircraft
		sp_tag_bomb
	}

	allowed = {
		has_dlc = "Gotterdammerung"		
	}

	available = { 

	}

	breakthrough_cost = {
		specialization_air = 1
	}
	
	resource_cost = {
		resources = {
			steel = 8
			aluminium = 8
			rubber = 4
		}
	}

	prototype_time = sp_time.prototype.medium	

	complexity = sp_complexity.medium 

	project_output = {
		country_effects = {
			custom_effect_tooltip = sp_air_bouncing_bomb_completion_tt
		}		
	}	

	generic_prototype_rewards = {
		sp_air_political_interference_generic_reward
		sp_air_generic_aerodynamics_advancements_reward
		sp_air_generic_reward_scientist_xp_1
		sp_air_generic_reward_scientist_xp_2
		#sp_air_generic_reward_scientist_xp_3
		sp_air_generic_reward_air_xp_1
		sp_air_generic_reward_air_xp_2
		#sp_air_generic_reward_air_xp_3
		sp_air_generic_reward_major_progress_1
		sp_air_generic_reward_major_progress_2
		#sp_air_generic_reward_major_progress_3
		#sp_air_generic_reward_test_failure_1
		#sp_air_generic_reward_test_failure_2
		#sp_air_generic_reward_test_failure_3		
	}

	unique_prototype_rewards = {
		sp_air_bouncing_bomb_backspin_mechanism_reward = {
			fire_only_once = yes
			
			threshold = { 
				min = 0
				max = 80
			}
			
			weight = {
				base = 1
			}
			
			option = {
				token = sp_air_bouncing_bomb_backspin_mechanism_reward_option
						
				iteration_output = {
					country_effects = {
						FROM = { add_project_progress_ratio = constant:sp_progress.gain.medium }
					}
					scientist_effects = {
						add_scientist_xp = {
							experience = constant:sp_scientist_xp_gain.high
							specialization = specialization_air 
						}
					}
				}
			}
		}

		sp_air_bouncing_bomb_training_accidents_reward = {
			fire_only_once = yes
			
			threshold = { 
				min = 0
				max = 80
			}
			
			weight = {
				base = 1
			}
			
			option = {
				token = sp_air_bouncing_bomb_training_accidents_reward_option
						
				iteration_output = {
					country_effects = {
						FROM = { add_project_progress_ratio = -0.02 }
						air_experience = 25 
					}
				}
			}
		}

		sp_air_bouncing_bomb_type_of_explosives_reward = {
			fire_only_once = yes
			
			threshold = { 
				min = 0
				max = 80
			}
			
			weight = {
				base = 1
			}
			
			option = {
				token = sp_air_bouncing_bomb_type_of_explosives_reward_option
						
				iteration_output = {
					#country_effects = {
					#	FROM = { add_project_progress_ratio = 0.10 }
					#}
					scientist_effects = {
						add_scientist_xp = {
							experience = constant:sp_scientist_xp_gain.high
							specialization = specialization_air 
						}
					}
				}
			}
		}

		sp_air_bouncing_bomb_aircraft_modifications_reward = {
			fire_only_once = yes
			
			threshold = { 
				min = 0
				max = 80
			}
			
			weight = {
				base = 1
			}
			
			option = {
				token = sp_air_bouncing_bomb_aircraft_modifications_reward_option
						
				iteration_output = {
					country_effects = {
						FROM = { add_project_progress_ratio = constant:sp_progress.gain.low }
						air_experience = 5 
					}
				}
			}
		}
	}
}


sp_air_earthshaker_bomb = {
	specialization = specialization_air 	
	icon = GFX_sp_air_earthshaker_bomb

	project_tags = {
		sp_tag_aircraft
		sp_tag_bomb
	}

	allowed = {
		has_dlc = "Gotterdammerung"		
	}

	available = { 

	}

	breakthrough_cost = {
		specialization_air = 1
	}
	
	resource_cost = {
		resources = {
			steel = 8
			tungsten = 16
		}
	}
	
	prototype_time = sp_time.prototype.long

	complexity = sp_complexity.medium

	project_output = {
		country_effects = {
			custom_effect_tooltip = sp_air_earthshaker_bomb_completion_tt
		}
	}

	generic_prototype_rewards = {
		sp_air_political_interference_generic_reward
		sp_air_generic_aerodynamics_advancements_reward
		sp_air_generic_reward_scientist_xp_1
		sp_air_generic_reward_scientist_xp_2
		sp_air_generic_reward_scientist_xp_3
		sp_air_generic_reward_air_xp_1
		sp_air_generic_reward_air_xp_2
		sp_air_generic_reward_air_xp_3
		sp_air_generic_reward_major_progress_1
		sp_air_generic_reward_major_progress_2
		sp_air_generic_reward_major_progress_3
		sp_air_generic_reward_test_failure_1
		sp_air_generic_reward_test_failure_2
		sp_air_generic_reward_test_failure_3		
	}

	unique_prototype_rewards = {
		sp_air_earthshaker_bomb_unique_reward = {
			fire_only_once = yes

			threshold = { 
				min = 40
				max = 90
			}

			weight = {
				base = 100
			}

			option = {
				token = sp_air_earthshaker_bomb_preference_naval_targetting
				
				iteration_output = {
					country_effects = {
						add_equipment_bonus = {
							name = sp_earthshaker_bomb_naval_targetting
							bonus = {
								large_plane_airframe = { #SETUP IN CASE OF HAVING TO BALANCE DIFFERENTLY FOR NON-BBA AND BBA
									naval_strike_targetting = 0.1
								}
							}
						}
					}
				}
			}
			

			option = {
				token = sp_air_earthshaker_bomb_preference_raw_power
				default = yes
				iteration_output = {
					country_effects = {

							add_equipment_bonus = {
								name = sp_earthshaker_bomb_power
								bonus = {
									large_plane_airframe = { #SETUP IN CASE OF HAVING TO BALANCE DIFFERENTLY FOR NON-BBA AND BBA
										naval_strike_attack = 0.05
										air_bombing = 0.05
									}
								}
							}
						}
					}
				}
			

			option = {
				token = sp_air_earthshaker_bomb_preference_both
				
				iteration_output = {
					country_effects = {

							add_equipment_bonus = {
								name = sp_earthshaker_bomb_both
								bonus = {
									large_plane_airframe = { #SETUP IN CASE OF HAVING TO BALANCE DIFFERENTLY FOR NON-BBA AND BBA
										naval_strike_targetting = 0.1
										naval_strike_attack = 0.05
										air_bombing = 0.05
										build_cost_ic = 0.05
									}
								}
							}
						}
					}
				}
			}
		}
	}
	





   ##    #  #####    ####   #####     ##    ######  ##### 
  #  #   #  #    #  #    #  #    #   #  #   #         #   
 #    #  #  #    #  #       #    #  #    #  #####     #   
 ######  #  #####   #       #####   ######  #         #   
 #    #  #  #   #   #    #  #   #   #    #  #         #   
 #    #  #  #    #   ####   #    #  #    #  #         #   


sp_air_intercontinental_bomber = {
	specialization = specialization_air 	
	icon = GFX_sp_air_intercontinental_bomber

	project_tags = sp_tag_aircraft

	allowed = {
		has_dlc = "Gotterdammerung"	
	}

	available = { 
		FROM = {
		   OR = {
			has_tech = usa_strategic_bomber_1940
			has_tech =sov_strategic_bomber_1939
			has_tech =ger_strategic_bomber_1939
			has_tech =eng_strategic_bomber_1939
			has_tech = strategic_bomber_1939
		}
	  }
	}

	breakthrough_cost = {
		specialization_air = 2
	}
	
	resource_cost = {
		resources = {
			aluminium = 48
			rubber = 24
		}
	}
	
	prototype_time = sp_time.prototype.very_long

	complexity = sp_complexity.large

	project_output = {
		enable_equipments = {
			strat_bomber_intercontinental_equipment_1
		}
	}

	

	generic_prototype_rewards = {
		sp_air_political_interference_generic_reward
		sp_air_generic_aerodynamics_advancements_reward
		sp_air_generic_reward_scientist_xp_1
		sp_air_generic_reward_scientist_xp_2
		sp_air_generic_reward_scientist_xp_3
		sp_air_generic_reward_air_xp_1
		sp_air_generic_reward_air_xp_2
		sp_air_generic_reward_air_xp_3
		sp_air_generic_reward_major_progress_1
		sp_air_generic_reward_major_progress_2
		sp_air_generic_reward_major_progress_3
		sp_air_generic_reward_test_failure_1
		sp_air_generic_reward_test_failure_2
		sp_air_generic_reward_test_failure_3	
	}

	unique_prototype_rewards = {
		sp_air_intercontinental_bomber_unique_reward = {
			fire_only_once = yes

			threshold = { 
				min = 40
				max = 90
			}

			weight = {
				base = 100
			}

			option = {
				token = sp_air_intercontinental_bomber_preference_balanced
				
				iteration_output = {
					country_effects = {
						if = {
							limit = { has_dlc = "By Blood Alone"}							
						
							add_equipment_bonus = {
								name = sp_air_intercontinental_bomber_balanced
								bonus = {
									strat_bomber_intercontinental_equipment = { #SETUP IN CASE OF HAVING TO BALANCE DIFFERENTLY FOR NON-BBA AND BBA
										reliability = 0.05									
									}
								}
							}
						}
						else = {
							add_equipment_bonus = {
								name = sp_air_intercontinental_bomber_balanced
								bonus = {
									strat_bomber_intercontinental_equipment = { #SETUP IN CASE OF HAVING TO BALANCE DIFFERENTLY FOR NON-BBA AND BBA
										reliability = 0.05
									}
								}
							}
						}
					}
				}
			}

			option = {
				token = sp_air_intercontinental_bomber_preference_bombing_payload
				
				iteration_output = {
					country_effects = {

							add_equipment_bonus = {
								name = sp_air_intercontinental_bomber_bombing_payload
								bonus = {
									strat_bomber_intercontinental_equipment = { #SETUP IN CASE OF HAVING TO BALANCE DIFFERENTLY FOR NON-BBA AND BBA
								      air_bombing = 0.15
										air_defence	= -0.05
										air_attack = -0.1	
									}
								}
							}
						}
					}
				}
			

			option = {
				token = sp_air_intercontinental_bomber_preference_protection
				
				iteration_output = {
					country_effects = {
	
							add_equipment_bonus = {
								name = sp_air_intercontinental_bomber_protection
								bonus = {
									strat_bomber_intercontinental_equipment = { #SETUP IN CASE OF HAVING TO BALANCE DIFFERENTLY FOR NON-BBA AND BBA
										air_defence = 0.15
										air_attack = -0.1
										air_bombing = -0.1
									}
								}
							}
						}
					}
				}
			}
		}
	}




      #  ######  #####   ####  
      #  #         #    #      
      #  #####     #     ####  
      #  #         #         # 
 #    #  #         #    #    # 
  ####   ######    #     ####  



sp_air_jet_engine = {
	specialization = specialization_air 	
	icon = GFX_sp_air_jet_engine

	project_tags = {
		sp_tag_aircraft
		sp_tag_jet
	}

	available = { 
		FROM = {
			has_tech = advanced_machine_tools
		}
		
	
	}
	
	breakthrough_cost = {
		specialization_air = 3
	}

	resource_cost = {
		resources = {
			chromium = 24
			aluminium = 8
			steel = 4
		}
	}

	prototype_time = sp_time.prototype.long

	complexity = sp_complexity.large

	project_output = {

		
	}

	generic_prototype_rewards = {
		sp_air_political_interference_generic_reward
		sp_air_generic_aerodynamics_advancements_reward
		sp_air_generic_reward_scientist_xp_1
		sp_air_generic_reward_scientist_xp_2
		sp_air_generic_reward_scientist_xp_3
		sp_air_generic_reward_air_xp_1
		sp_air_generic_reward_air_xp_2
		sp_air_generic_reward_air_xp_3
		sp_air_generic_reward_major_progress_1
		sp_air_generic_reward_major_progress_2
		sp_air_generic_reward_major_progress_3
		sp_air_generic_reward_test_failure_1
		sp_air_generic_reward_test_failure_2
		sp_air_generic_reward_test_failure_3		
	}
	
	unique_prototype_rewards = {
		sp_air_jet_engine_unique_reward = {
			fire_only_once = yes

			threshold = { 
				min = 40
				max = 90
			}

			weight = {
				base = 100
			}

			option = {
				token = sp_air_jet_engine_preference_fighter
				
				iteration_output = {
					country_effects = {
						if = {
							limit = { has_dlc = "By Blood Alone"}							
							add_tech_bonus = {
								name = sp_air_light_air_tech_bonus
								bonus = 0.5
								uses = 1
								category = light_air
							}
						}
						else = {
							add_equipment_bonus = {
								name = sp_air_jet_engine_fighter
								bonus = {
									jet_tac_bomber_equipment = { 
										air_ground_attack = -0.05
										air_range = -0.05
										build_cost_ic = 0.05
									}
								}
							}
							add_equipment_bonus = {	
								name = sp_air_jet_engine_fighter
								bonus = {
									jet_fighter_equipment = {
										maximum_speed = 0.05
										air_agility = 0.05
										build_cost_ic = -0.05
									}	
								}
							}						
						}
					}
				}
			}
		

			option = {
				token = sp_air_jet_engine_preference_compromise
				default = yes
				iteration_output = {
					country_effects = {
						if = {
							limit = { has_dlc = "By Blood Alone"}							
						

							add_tech_bonus = {
								name = sp_air_air_equipment_tech_bonus
								bonus = 0.25
								uses = 2
								category = air_equipment
							}
						}
						else = {
							add_equipment_bonus = {
								name = sp_air_jet_engine_compromise
								bonus = {
									jet_tac_bomber_equipment = {
										reliability = 0.03
									}
								}
							}
							add_equipment_bonus = {	
								name = sp_air_jet_engine_compromise
								bonus = {
									jet_fighter_equipment = {
										reliability = 0.03
									}	
								}
							}						
						}
					}
				}
			}

			option = {
				token = sp_air_jet_engine_preference_bomber
				
				iteration_output = {
					country_effects = {
						if = {
							limit = { has_dlc = "By Blood Alone"}							
							add_tech_bonus = {
								name = sp_air_medium_air_tech_bonus
								bonus = 0.5
								uses = 1
								category = medium_air
							}
						}
						else = {
							add_equipment_bonus = {
								name = sp_air_jet_engine_bomber
								bonus = {
									jet_tac_bomber_equipment = {
										air_ground_attack = 0.05
										air_range = 0.05
										build_cost_ic = -0.05
									}
								}
							}
							add_equipment_bonus = {	
								name = sp_air_jet_engine_bomber
								bonus = {
									jet_fighter_equipment = {
										maximum_speed = -0.05
										air_agility = -0.05
										build_cost_ic = 0.05
									}	
								}
							}						
						}
					}
				}
			}		
		}	
	}
}







 #    #  ######  #       #   ####    ####   #####   #####  ######  #####  
 #    #  #       #       #  #    #  #    #  #    #    #    #       #    # 
 ######  #####   #       #  #       #    #  #    #    #    #####   #    # 
 #    #  #       #       #  #       #    #  #####     #    #       #####  
 #    #  #       #       #  #    #  #    #  #         #    #       #   #  
 #    #  ######  ######  #   ####    ####   #         #    ######  #    # 



sp_air_helicopter = {
	specialization = specialization_air 	
	icon = GFX_sp_air_helicopter

	project_tags = {
		sp_tag_aircraft
		sp_tag_helicopter
	}

	allowed = {
		has_dlc = "Gotterdammerung"		
	}

	breakthrough_cost = {
		specialization_air = 2
	}

	resource_cost = {
		resources = {
			aluminium = 24
			steel = 16
		}
	}
	
	prototype_time = sp_time.prototype.long

	complexity = sp_complexity.medium

	project_output = {
		country_effects = {
			custom_effect_tooltip = {
				localization_key = SP_UNLOCK_TECH
				TECH = sp_helicopter_transport_pods_tech
			}
			custom_effect_tooltip = {
				localization_key = SP_UNLOCK_TECH
				TECH = sp_helicopter_artillery_observers_tech
			}
			custom_effect_tooltip = {
				localization_key = SP_UNLOCK_TECH
				TECH = sp_helicopter_med_evac_tech
			}
		}		

		enable_equipments = {
			helicopter_equipment_1 
		}

		#enable_subunits = { 
		#	helicopter_brigade
		#}

		enable_equipment_modules = {
			limit = {
				has_dlc = "Gotterdammerung"
				has_dlc = "No Step Back"
			}
			lc_helipad #Module for Land Cruiser
		}
	}

	generic_prototype_rewards = {
		sp_air_scientist_xp_generic_reward
		sp_air_political_interference_generic_reward
		sp_air_generic_major_breakthrough_reward
		sp_air_generic_aerodynamics_advancements_reward
		sp_air_generic_reward_scientist_xp_1
		sp_air_generic_reward_scientist_xp_2
		sp_air_generic_reward_scientist_xp_3
		sp_air_generic_reward_air_xp_1
		sp_air_generic_reward_air_xp_2
		sp_air_generic_reward_air_xp_3
		sp_air_generic_reward_major_progress_1
		sp_air_generic_reward_major_progress_2
		sp_air_generic_reward_major_progress_3
		sp_air_generic_reward_test_failure_1
		sp_air_generic_reward_test_failure_2
		sp_air_generic_reward_test_failure_3		
	}

	unique_prototype_rewards = {
		sp_air_helicopter_unique_reward = {
			fire_only_once = yes

			threshold = { 
				min = 40
				max = 90
			}

			weight = {
				base = 100
			}

			option = {
				token = sp_air_helicopter_preference_speed
				
				iteration_output = {
					country_effects = {
						add_equipment_bonus = {
							name = sp_air_helicopter_speed
							bonus = {
								helicopter_equipment  = {
									maximum_speed = 0.1
									fuel_consumption = 0.05
									build_cost_ic = 0.05
								}
							}
						}
					}
				}
			}
		

			option = {
				token = sp_air_helicopter_preference_compromise
				
				iteration_output = {
					country_effects = {
						add_equipment_bonus = {
							name = sp_air_helicopter_compromise
							bonus = {
								helicopter_equipment  = {
									reliability = 0.05
								}
							}
						}
					}
				}
			}

			option = {
				token = sp_air_helicopter_preference_protection
				
				iteration_output = {
					country_effects = {					
						add_equipment_bonus = {
							name = sp_air_helicopter_protection
							bonus = {
								helicopter_equipment  = {
									armor_value = 0.1
									defense = 0.1
									breakthrough = 0.1
									fuel_consumption = 0.15
									build_cost_ic = 0.1
								}
							}
						}
					}
				}		
			}	
		}
	}
}